{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/antoineluta/Documents/GitHub/photolangage/utils/prismicHelpers.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Prismic from 'prismic-javascript';\nimport Link from 'next/link';\nimport { apiEndpoint, accessToken, linkResolver, hrefResolver } from 'prismic-configuration'; // Helper function to convert Prismic Rich Text links to Next/Link components\n\nexport var customLink = function customLink(type, element, content, children, index) {\n  return __jsx(Link, {\n    key: index,\n    href: hrefResolver(element.data),\n    as: linkResolver(element.data),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, content));\n}; // Client method to query documents from the Prismic repo\n\nexport var Client = function Client() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return Prismic.client(apiEndpoint, createClientOptions(req, accessToken));\n};\n_c = Client;\n\nvar createClientOptions = function createClientOptions() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var prismicAccessToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var reqOption = req ? {\n    req: req\n  } : {};\n  var accessTokenOption = prismicAccessToken ? {\n    accessToken: prismicAccessToken\n  } : {};\n  return _objectSpread(_objectSpread({}, reqOption), accessTokenOption);\n};\n\nexport default Client;\n\nvar _c;\n\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"sources":["/Users/antoineluta/Documents/GitHub/photolangage/utils/prismicHelpers.js"],"names":["Prismic","Link","apiEndpoint","accessToken","linkResolver","hrefResolver","customLink","type","element","content","children","index","data","Client","req","client","createClientOptions","prismicAccessToken","reqOption","accessTokenOption"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,uBALP,C,CAOA;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,KAAnC;AAAA,SACxB,MAAC,IAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,IAAI,EAAEN,YAAY,CAACG,OAAO,CAACI,IAAT,CAFpB;AAGE,IAAA,EAAE,EAAER,YAAY,CAACI,OAAO,CAACI,IAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,OAAJ,CALF,CADwB;AAAA,CAAnB,C,CAUP;;AACA,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS;AAAA,MAACC,GAAD,uEAAO,IAAP;AAAA,SACpBd,OAAO,CAACe,MAAR,CAAeb,WAAf,EAA4Bc,mBAAmB,CAACF,GAAD,EAAMX,WAAN,CAA/C,CADoB;AAAA,CAAf;KAAMU,M;;AAIb,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAA2C;AAAA,MAA1CF,GAA0C,uEAApC,IAAoC;AAAA,MAA9BG,kBAA8B,uEAAT,IAAS;AACrE,MAAMC,SAAS,GAAGJ,GAAG,GAAG;AAAEA,IAAAA,GAAG,EAAHA;AAAF,GAAH,GAAa,EAAlC;AACA,MAAMK,iBAAiB,GAAGF,kBAAkB,GAAG;AAAEd,IAAAA,WAAW,EAAEc;AAAf,GAAH,GAAyC,EAArF;AACA,yCACKC,SADL,GAEKC,iBAFL;AAID,CAPD;;AASA,eAAeN,MAAf","sourcesContent":["import Prismic from 'prismic-javascript'\nimport Link from 'next/link'\nimport {\n  apiEndpoint,\n  accessToken,\n  linkResolver,\n  hrefResolver\n} from 'prismic-configuration'\n\n// Helper function to convert Prismic Rich Text links to Next/Link components\nexport const customLink = (type, element, content, children, index) => (\n  <Link\n    key={index}\n    href={hrefResolver(element.data)}\n    as={linkResolver(element.data)}\n  >\n    <a>{content}</a>\n  </Link>\n)\n\n// Client method to query documents from the Prismic repo\nexport const Client = (req = null) => (\n  Prismic.client(apiEndpoint, createClientOptions(req, accessToken))\n)\n\nconst createClientOptions = (req = null, prismicAccessToken = null) => {\n  const reqOption = req ? { req } : {}\n  const accessTokenOption = prismicAccessToken ? { accessToken: prismicAccessToken } : {}\n  return {\n    ...reqOption,\n    ...accessTokenOption,\n  }\n}\n\nexport default Client\n"]},"metadata":{},"sourceType":"module"}