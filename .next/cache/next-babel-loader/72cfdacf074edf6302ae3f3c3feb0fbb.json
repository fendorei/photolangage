{"ast":null,"code":"var _jsxFileName = \"/Users/antoineluta/Documents/GitHub/photolangage/pages/[uid].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport { RichText } from \"prismic-reactjs\";\nimport { queryRepeatableDocuments } from 'utils/queries'; // Project components\n\nimport DefaultLayout from \"layouts\";\nimport { BackButton, SliceZone } from \"components/post\"; // Project functions & styles\n\nimport { Client } from \"utils/prismicHelpers\";\nimport { postStyles } from \"styles\";\n/**\r\n * Post page component\r\n */\n\nconst Post = ({\n  post\n}) => {\n  if (post && post.data) {\n    const hasTitle = RichText.asText(post.data.title).length !== 0;\n    const title = hasTitle ? RichText.asText(post.data.title) : \"Untitled\";\n    return __jsx(DefaultLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, title)), __jsx(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"outer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(BackButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, title)), __jsx(SliceZone, {\n      sliceZone: post.data.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })), __jsx(_JSXStyle, {\n      id: postStyles.__hash,\n      __self: this\n    }, postStyles));\n  }\n\n  return null;\n};\n\nexport async function getStaticProps({\n  params,\n  preview = null,\n  previewData = {}\n}) {\n  const {\n    ref\n  } = previewData;\n  const post = (await Client().getByUID(\"card\", params.uid, ref ? {\n    ref\n  } : null)) || {};\n  return {\n    props: {\n      preview,\n      post\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const documents = await queryRepeatableDocuments(doc => doc.type === 'post');\n  return {\n    paths: documents.map(doc => `/${doc.uid}`),\n    fallback: true\n  };\n}\nexport default Post;","map":{"version":3,"sources":["/Users/antoineluta/Documents/GitHub/photolangage/pages/[uid].js"],"names":["React","Head","RichText","queryRepeatableDocuments","DefaultLayout","BackButton","SliceZone","Client","postStyles","Post","post","data","hasTitle","asText","title","length","body","getStaticProps","params","preview","previewData","ref","getByUID","uid","props","getStaticPaths","documents","doc","type","paths","map","fallback"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,wBAAT,QAAyC,eAAzC,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,iBAAtC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA;;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,MAAIA,IAAI,IAAIA,IAAI,CAACC,IAAjB,EAAuB;AACrB,UAAMC,QAAQ,GAAGV,QAAQ,CAACW,MAAT,CAAgBH,IAAI,CAACC,IAAL,CAAUG,KAA1B,EAAiCC,MAAjC,KAA4C,CAA7D;AACA,UAAMD,KAAK,GAAGF,QAAQ,GAAGV,QAAQ,CAACW,MAAT,CAAgBH,IAAI,CAACC,IAAL,CAAUG,KAA1B,CAAH,GAAsC,UAA5D;AAEA,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,KAAR,CADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAFF,CADF,EAKE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAEJ,IAAI,CAACC,IAAL,CAAUK,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF;AAAA;AAAA;AAAA,mBADF;AAiBD;;AAED,SAAO,IAAP;AACD,CAzBD;;AA2BA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAO,GAAG,IAApB;AAA0BC,EAAAA,WAAW,GAAG;AAAxC,CAA9B,EAA4E;AACjF,QAAM;AAAEC,IAAAA;AAAF,MAAUD,WAAhB;AACA,QAAMV,IAAI,GAAG,OAAMH,MAAM,GAAGe,QAAT,CAAkB,MAAlB,EAA0BJ,MAAM,CAACK,GAAjC,EAAsCF,GAAG,GAAG;AAAEA,IAAAA;AAAF,GAAH,GAAa,IAAtD,CAAN,KAAqE,EAAlF;AACA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLL,MAAAA,OADK;AAELT,MAAAA;AAFK;AADF,GAAP;AAMD;AAED,OAAO,eAAee,cAAf,GAAgC;AACrC,QAAMC,SAAS,GAAG,MAAMvB,wBAAwB,CAAEwB,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAa,MAAvB,CAAhD;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEH,SAAS,CAACI,GAAV,CAAcH,GAAG,IAAK,IAAGA,GAAG,CAACJ,GAAI,EAAjC,CADF;AAELQ,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,eAAetB,IAAf","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport { RichText } from \"prismic-reactjs\";\r\n\r\nimport { queryRepeatableDocuments } from 'utils/queries'\r\n\r\n// Project components\r\nimport DefaultLayout from \"layouts\";\r\nimport { BackButton, SliceZone } from \"components/post\";\r\n\r\n// Project functions & styles\r\nimport { Client } from \"utils/prismicHelpers\";\r\nimport { postStyles } from \"styles\";\r\n\r\n/**\r\n * Post page component\r\n */\r\nconst Post = ({ post }) => {\r\n  if (post && post.data) {\r\n    const hasTitle = RichText.asText(post.data.title).length !== 0;\r\n    const title = hasTitle ? RichText.asText(post.data.title) : \"Untitled\";\r\n\r\n    return (\r\n      <DefaultLayout>\r\n        <Head>\r\n          <title>{title}</title>\r\n        </Head>\r\n        <div className=\"main\">\r\n          <div className=\"outer-container\">\r\n            <BackButton />\r\n            <h1>{title}</h1>\r\n          </div>\r\n          <SliceZone sliceZone={post.data.body} />\r\n        </div>\r\n        <style jsx global>\r\n          {postStyles}\r\n        </style>\r\n      </DefaultLayout>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport async function getStaticProps({ params, preview = null, previewData = {} }) {\r\n  const { ref } = previewData\r\n  const post = await Client().getByUID(\"card\", params.uid, ref ? { ref } : null) || {}\r\n  return {\r\n    props: {\r\n      preview,\r\n      post\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const documents = await queryRepeatableDocuments((doc) => doc.type === 'post')\r\n  return {\r\n    paths: documents.map(doc => `/${doc.uid}`),\r\n    fallback: true,\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}