{"ast":null,"code":"// -- Prismic API endpoint\n// Determines which repository to query and fetch data from\n// Configure your site's access point here\nexport var apiEndpoint = 'https://photolangage.cdn.prismic.io/api/v2'; // -- Access Token if the repository is not public\n// Generate a token in your dashboard and configure it here if your repository is private\n\nexport var accessToken = ''; // -- Link resolution rules\n// Manages the url links to internal Prismic documents\n\nexport var linkResolver = function linkResolver(doc) {\n  if (doc.type === 'post') {\n    return \"/blog/\".concat(doc.uid);\n  }\n\n  return '/';\n}; // Additional helper function for Next/Link components\n\nexport var hrefResolver = function hrefResolver(doc) {\n  if (doc.type === 'post') {\n    return '/blog/[uid]';\n  }\n\n  return '/';\n};","map":{"version":3,"sources":["/Users/antoineluta/Documents/GitHub/photolangage/prismic-configuration.js"],"names":["apiEndpoint","accessToken","linkResolver","doc","type","uid","hrefResolver"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAMA,WAAW,GAAG,4CAApB,C,CAEP;AACA;;AACA,OAAO,IAAMC,WAAW,GAAG,EAApB,C,CAEP;AACA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AACnC,MAAIA,GAAG,CAACC,IAAJ,KAAa,MAAjB,EAAyB;AACvB,2BAAgBD,GAAG,CAACE,GAApB;AACD;;AACD,SAAO,GAAP;AACD,CALM,C,CAOP;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,GAAD,EAAS;AACnC,MAAIA,GAAG,CAACC,IAAJ,KAAa,MAAjB,EAAyB;AACvB,WAAO,aAAP;AACD;;AACD,SAAO,GAAP;AACD,CALM","sourcesContent":["// -- Prismic API endpoint\r\n// Determines which repository to query and fetch data from\r\n// Configure your site's access point here\r\nexport const apiEndpoint = 'https://photolangage.cdn.prismic.io/api/v2'\r\n\r\n// -- Access Token if the repository is not public\r\n// Generate a token in your dashboard and configure it here if your repository is private\r\nexport const accessToken = ''\r\n\r\n// -- Link resolution rules\r\n// Manages the url links to internal Prismic documents\r\nexport const linkResolver = (doc) => {\r\n  if (doc.type === 'post') {\r\n    return `/blog/${doc.uid}`\r\n  }\r\n  return '/'\r\n}\r\n\r\n// Additional helper function for Next/Link components\r\nexport const hrefResolver = (doc) => {\r\n  if (doc.type === 'post') {\r\n    return '/blog/[uid]'\r\n  }\r\n  return '/'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}