{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/antoineluta/Documents/GitHub/photolangage/components/post/slices/Quote.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport { quoteStyles } from 'styles';\n/**\r\n * Quote slice component\r\n */\n\nvar Quote = function Quote(_ref) {\n  var slice = _ref.slice;\n  return __jsx(\"div\", {\n    className: \"post-part single container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, __jsx(\"blockquote\", {\n    className: \"block-quotation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, RichText.asText(slice.primary.quote)), __jsx(_JSXStyle, {\n    id: quoteStyles.__hash,\n    __self: _this\n  }, quoteStyles));\n};\n\n_c = Quote;\nexport default Quote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/antoineluta/Documents/GitHub/photolangage/components/post/slices/Quote.js"],"names":["React","RichText","quoteStyles","Quote","slice","asText","primary","quote"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACZ;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACI,MAAT,CAAgBD,KAAK,CAACE,OAAN,CAAcC,KAA9B,CADH,CADF;AAAA;AAAA;AAAA,kBADY;AAAA,CAAd;;KAAMJ,K;AASN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { RichText } from 'prismic-reactjs'\r\nimport { quoteStyles } from 'styles'\r\n\r\n/**\r\n * Quote slice component\r\n */\r\nconst Quote = ({ slice }) => (\r\n  <div className=\"post-part single container\">\r\n    <blockquote className=\"block-quotation\">\r\n      {RichText.asText(slice.primary.quote)}\r\n    </blockquote>\r\n    <style jsx global>{quoteStyles}</style>\r\n  </div>\r\n)\r\n\r\nexport default Quote\r\n"]},"metadata":{},"sourceType":"module"}